<tool id="row-simple-operation" name="Operations sur des lignes">
    <requirements>
        <requirement type="package" version="1.12.2">r-data.table</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        cat '$script' &&
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
            ## Setup R error handling to go to stderr
            options(show.error.messages=F, error=function(){cat(geterrmessage(), file=stderr()); q("no",1,F)})

            ## Unify locale settings
            loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

            ## Import library
            library(data.table)

            ## Import file
            input <- fread('$input')

            ## prepare output file
            #if $keep != "None"
            output <- input[ , c($keep)]
            #else
            output <- input
            #end if

            ##Keep the selected columns
            inputSelect <- input[ , c($include)]

            ## Add new column

            #if $outputOperation == "mean"
                result <- rowMeans(inputSelect, na.rm = TRUE)
            #elif $outputOperation == "sum"
                result <- rowSums(inputSelect, na.rm = TRUE)
            #elif $outputOperation == "sd"
                result <- rowSds(inputSelect, na.rm = TRUE)
            #elif $outputOperation == "countAbove0"
                inputSelectZero <- inputSelect
                inputSelectZero[inputSelectZero > 0] <- 1
                result <- rowSums(inputSelectZero, na.rm = TRUE)
            #end if

            output <- data.frame(output, res = result)
            colnames(output)[ncol(output)] <- '$outputName'

            write.table(output, file="result", row.names=FALSE, sep=",")

        ]]></configfile>
    </configfiles>

    <inputs>
        <param format="tabular,csv,txt" name="input" type="data" label="À partir des données d'entrée" />
        <param name="outputOperation" type="select" label="faire l'opération suivante">
            <option value="sum" selected="true">Somme</option>
            <option value="mean">Moyenne</option>
            <option value="sd">Ecart-type</option>
            <option value="countAbove0">Compter les valeurs supérieures à zéro</option>
        </param>
        <param name="outputName" type="text" value="Result" label="et stocker l'information dans une nouvelle colonne nommée" >
            <sanitizer invalid_char="_">
                <valid initial="default">
                    <add value="à" />
                    <add value="â" />
                    <add value="é" />
                    <add value="è" />
                    <add value="ê" />
                    <add value="ë" />
                    <add value="î" />
                    <add value="ï" />
                    <add value="ô" />
                    <add value="ù" />
                    <add value="û" />
                    <add value="ÿ" />
                    <add value="ç" />
                    <add value="œ" />
                    <add value="€" />
                </valid>
            </sanitizer>
        </param>
        <param name="include" label="à partir des colonnes suivantes" type="data_column" data_ref="input" numerical="false" multiple = "true" />
        <param name="keep" label="Maintenir ces colonnes dans le jeu de données final" type="data_column" data_ref="input" numerical="false" multiple = "true" help="Sélectionner ajouter une colonne au jeu de donnée pour pouvoir utiliser ce paramètre" />

    </inputs>
    <outputs>
        <data format="csv" name="output" from_work_dir="result"/>
    </outputs>
    <help><![CDATA[

.. class:: infomark

Cet outil créé une nouvelle colonne qui est le résultat d'un calcul portant sur la ligne.

    ]]></help>
</tool>
