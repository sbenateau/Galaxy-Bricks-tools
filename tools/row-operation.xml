<tool id="row-operation" name="Opérations sur des lignes">
    <requirements>
        <requirement type="package" version="1.12.2">r-data.table</requirement>
        <requirement type="package" version="1.3.1">r-stringr</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #if $formuleOrNot.TypeOperation == "OperationSimple"
                Rscript '$__tool_directory__/row-simple-operation.R' '$input' '$formuleOrNot.include' '$formuleOrNot.keep' '$formuleOrNot.outputOperation1' '$formuleOrNot.outputName1'
            #if $formuleOrNot.addNewOperation.addOperation == "oui"
                '$formuleOrNot.addNewOperation.outputOperation2' '$formuleOrNot.addNewOperation.outputName2'
            #end if
            '$output'
        #else
            Rscript '$__tool_directory__/row-formula-operation.R' '$input' '$formuleOrNot.inputFormula' '$formuleOrNot.inputName' '$output'
        #end if
    ]]></command>
    <inputs>
        <param format="tabular,csv,txt" name="input" type="data" label="À partir des données d'entrée" />
        <conditional name="formuleOrNot">
            <param name="TypeOperation" type="select" label="Voulez-vous ?" >
                <option value="OperationSimple">utiliser des opérations simples</option>
                <option value="formule">écrire votre propre formule</option>
            </param>
            <when value="OperationSimple">
                <param name="outputOperation1" type="select" label="Faire l'opération suivante">
                    <option value="somme" selected="true">Somme</option>
                    <option value="moyenne">Moyenne</option>
                    <option value="ecart-type">Ecart-type</option>
                    <option value="valeurs-superieures-a-zero">Compter les valeurs supérieures à zéro</option>
                </param>
                <param name="include" label="sur des colonnes suivantes" type="data_column" data_ref="input" numerical="false" multiple = "true" />
                <param name="outputName1" type="text" value="Result" label="et stocker l'information dans une nouvelle colonne nommée" >
                    <sanitizer invalid_char="_">
                        <valid initial="default">
                            <add value="à" />
                            <add value="â" />
                            <add value="é" />
                            <add value="è" />
                            <add value="ê" />
                            <add value="ë" />
                            <add value="î" />
                            <add value="ï" />
                            <add value="ô" />
                            <add value="ù" />
                            <add value="û" />
                            <add value="ÿ" />
                            <add value="ç" />
                            <add value="œ" />
                            <add value="€" />
                        </valid>
                    </sanitizer>
                </param>
                <conditional name="addNewOperation">
                    <param name="addOperation" type="select" label="Voulez-vous faire une autre opération sur ces mêmes colonnes ?">
                        <option value="non" selected="true">non</option>
                        <option value="oui">oui</option>
                    </param>
                <when value="oui">
                    <param name="outputOperation2" type="select" label="Faire l'opération supplémentaire suivante">
                        <option value="somme" selected="true">Somme</option>
                        <option value="moyenne">Moyenne</option>
                        <option value="ecart-type">Ecart-type</option>
                        <option value="valeurs-superieures-a-zero">Compter les valeurs supérieures à zéro</option>
                    </param>
                    <param name="outputName2" type="text" value="Result" label="et stocker l'information dans une nouvelle colonne nommée" >
                        <sanitizer invalid_char="_">
                            <valid initial="default">
                                <add value="à" />
                                <add value="â" />
                                <add value="é" />
                                <add value="è" />
                                <add value="ê" />
                                <add value="ë" />
                                <add value="î" />
                                <add value="ï" />
                                <add value="ô" />
                                <add value="ù" />
                                <add value="û" />
                                <add value="ÿ" />
                                <add value="ç" />
                                <add value="œ" />
                                <add value="€" />
                          </valid>
                      </sanitizer>
                  </param>
                </when>
                <when value="non">
                </when>
                </conditional>
                <param name="keep" label="et sélectionner les colonnes à garder dans le jeu de données final (optionnel)" type="data_column" data_ref="input" numerical="false" multiple = "true" help="Laisser ce champ vide pour garder toutes les colonnes"/>
            </when>
            <when value="formule">
                <param name="inputFormula" type="text" value="c1 + c2" label="Appliquer la formule suivante" help="Pour selectionner une colonne taper c et le numéro de la colonne (e.g. c2 pour la deuxième colonne). Vous pouvez utiliser les opérations suivantes : + addition - soustraction * multiplication / division ^ puissance" />
                <param name="inputName" type="text" value="" label="et stocker le résultat dans une nouvelle colonne nommée" >
                    <sanitizer invalid_char="_">
                        <valid initial="default">
                            <add value="à" />
                            <add value="â" />
                            <add value="é" />
                            <add value="è" />
                            <add value="ê" />
                            <add value="ë" />
                            <add value="î" />
                            <add value="ï" />
                            <add value="ô" />
                            <add value="ù" />
                            <add value="û" />
                            <add value="ÿ" />
                            <add value="ç" />
                            <add value="œ" />
                            <add value="€" />
                        </valid>
                    </sanitizer>
                </param>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="csv" name="output" from_work_dir="result.csv"/>
    </outputs>
    <help><![CDATA[

      .. class:: titre1-aide

      A quoi sert cet outil ?

      Cet outil permet de faire des opérations sur des colonnes en utilisant la syntaxe de programmation.

       * Il est possible de combiner plusieurs colonnes en utilisant les opérations classiques : «+» addition «-» soustraction «*» multiplication «/» division (par exemple c1 * c2 permet de multiplier les colonnes 1 et 2)

       * Il est possible de transformer une colonne en utilisant une constante (par exemple c1 / 2 permet de diviser toutes les valeurs de la colonne 1 par deux)

       * Il est possible de combiner ces deux opérations (par exemple log(c1) + c2 permet d’additionner le résultat du logarithme népérien de la colonne 1 avec la colonne 2)

      .. class:: titre1-aide

      Exemple avec des opérations classiques

      .. class:: titre2-aide

      1. Données d’entrée

      .. image:: http://formation.vigienature-ecole.fr/bricks/help/rowoperation1.jpg

      .. class:: titre2-aide

      2. Formule

      .. class:: parametre-aide

        c1 + c2

      .. class:: titre2-aide

      3. Résultat

      .. image:: http://formation.vigienature-ecole.fr/bricks/help/rowoperation2.jpg

      .. class:: titre1-aide

      Exemple avec des opérations plus complexes

      Vous pouvez écrire votre propre formule en utilisant par exemple :

      «log(c2)» (logarithme népérien), «exp(c2)» (exponentielle), «log10(c2)» (logarithme décimal), «sqrt(c2)» (racine carrée), «sin(c2)» (sinus), «cos(c2)» (cosinus), «tan(c2)» (tangente), «asin(c2)» (arc sinus), «acos(c2)» (arcsin)

      .. class:: titre2-aide

      1. Données d’entrée

      .. image:: http://formation.vigienature-ecole.fr/bricks/help/rowoperation1.jpg

      .. class:: titre2-aide

      2. Formule

      .. class:: parametre-aide

        log(c2)+c1

      .. class:: titre2-aide

      3. Résultat

      .. image:: http://formation.vigienature-ecole.fr/bricks/help/rowoperation3.jpg

    ]]></help>
</tool>
